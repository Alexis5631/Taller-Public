// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(PublicDbContext))]
    [Migration("20250604030215_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.CategoryCatalog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("categories_catalog", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.CategoryOption", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("CategoriesOptionsId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CatelogOptionsId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriesOptionsId");

                    b.HasIndex("CatelogOptionsId");

                    b.ToTable("category_options", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Chapter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ChapterNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ChapterTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ComponentHtml")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ComponentReact")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("SurveyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("SurveyId");

                    b.ToTable("chapters", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.OptionQuestion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CommentOptionRes")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NumberOption")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<long?>("OptionCatalogId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OptionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OptionQuestionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SubQuestionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("OptionCatalogId");

                    b.HasIndex("SubQuestionId");

                    b.ToTable("option_questions", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.OptionResponse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("OptionText")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("options_response", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Question", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ChapterId")
                        .HasColumnType("bigint");

                    b.Property<string>("CommentQuestion")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("QuestionNumber")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ResponseType")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ChapterId");

                    b.ToTable("questions", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.SubQuestion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CommentSubQuestion")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("SubQuestionId")
                        .HasColumnType("bigint");

                    b.Property<string>("SubQuestionNumber")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SubQuestionText")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("SubQuestionId");

                    b.ToTable("sub_questions", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.SumaryOption", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CodeNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<long>("IdQuestion")
                        .HasColumnType("bigint");

                    b.Property<long>("IdSurvey")
                        .HasColumnType("bigint");

                    b.Property<string>("ValueR")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("IdQuestion");

                    b.HasIndex("IdSurvey");

                    b.ToTable("sumaryoptions", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Survey", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ComponentHtml")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ComponentReact")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Instruction")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("surveys", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.CategoryOption", b =>
                {
                    b.HasOne("Domain.Entities.CategoryCatalog", "CategoryCatalog")
                        .WithMany("CategoryOptions")
                        .HasForeignKey("CategoriesOptionsId");

                    b.HasOne("Domain.Entities.OptionQuestion", "OptionQuestion")
                        .WithMany("CategoryOptions")
                        .HasForeignKey("CatelogOptionsId");

                    b.Navigation("CategoryCatalog");

                    b.Navigation("OptionQuestion");
                });

            modelBuilder.Entity("Domain.Entities.Chapter", b =>
                {
                    b.HasOne("Domain.Entities.Survey", "Survey")
                        .WithMany("Chapters")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("Domain.Entities.OptionQuestion", b =>
                {
                    b.HasOne("Domain.Entities.CategoryCatalog", "CategoryCatalog")
                        .WithMany("OptionQuestions")
                        .HasForeignKey("OptionCatalogId");

                    b.HasOne("Domain.Entities.SubQuestion", "SubQuestion")
                        .WithMany("OptionQuestions")
                        .HasForeignKey("SubQuestionId");

                    b.Navigation("CategoryCatalog");

                    b.Navigation("SubQuestion");
                });

            modelBuilder.Entity("Domain.Entities.Question", b =>
                {
                    b.HasOne("Domain.Entities.Chapter", "Chapter")
                        .WithMany("Questions")
                        .HasForeignKey("ChapterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chapter");
                });

            modelBuilder.Entity("Domain.Entities.SubQuestion", b =>
                {
                    b.HasOne("Domain.Entities.Question", "Question")
                        .WithMany("SubQuestions")
                        .HasForeignKey("SubQuestionId");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Domain.Entities.SumaryOption", b =>
                {
                    b.HasOne("Domain.Entities.Question", "Question")
                        .WithMany("SumaryOptions")
                        .HasForeignKey("IdQuestion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Survey", "Survey")
                        .WithMany("SumaryOptions")
                        .HasForeignKey("IdSurvey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("Domain.Entities.CategoryCatalog", b =>
                {
                    b.Navigation("CategoryOptions");

                    b.Navigation("OptionQuestions");
                });

            modelBuilder.Entity("Domain.Entities.Chapter", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("Domain.Entities.OptionQuestion", b =>
                {
                    b.Navigation("CategoryOptions");
                });

            modelBuilder.Entity("Domain.Entities.Question", b =>
                {
                    b.Navigation("SubQuestions");

                    b.Navigation("SumaryOptions");
                });

            modelBuilder.Entity("Domain.Entities.SubQuestion", b =>
                {
                    b.Navigation("OptionQuestions");
                });

            modelBuilder.Entity("Domain.Entities.Survey", b =>
                {
                    b.Navigation("Chapters");

                    b.Navigation("SumaryOptions");
                });
#pragma warning restore 612, 618
        }
    }
}
